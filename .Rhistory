results <- tcpSearch(range = 1600:1700, field = "Date", write = T)
library(dplyr)
library(xml2)
library(tei2r)
results <- tcpSearch(range = 1600:1700, field = "Date", write = T)
tcpDownload(results)
results <- tcpSearch(range = 1600:1700, field = "Date", write = T)
tcpDownload(results)
results <- tcpSearch(range = 1600:1700, field = "Date", write = T)
tcpDownload(results)
View(results)
dl = buildDocList(directory = getwd(), indexFile = "index.csv")
getwd()
setwd("~/Desktop/Reconstructing_London/RAW_Data")
dl = buildDocList(directory = getwd(), indexFile = "index.csv")
dl <- buildDocList(directory = getwd(), indexFile = "index.csv")
dl <- buildDocList(directory = getwd(), indexFile = "index.csv")
getwd()
dl <- buildDocList(indexFile = "index.csv")
dl <- buildDocList(directory = "~/Desktop/Reconstructing_London/RAW_Data", indexFile = "index.csv")
dl <- buildDocList(directory = "/Users/yuchenlu/Desktop/Reconstructing_London/RAW_Data", indexFile = "index.csv")
dl <- buildDocList(directory = "/Users/yuchenlu/Desktop/Reconstructing_London/RAW_Data", indexFile = "index.csv")
# dl <- buildDocList(directory = "/Users/yuchenlu/Desktop/Reconstructing_London/RAW_Data", indexFile = "index.csv")
dl <- docList()
library(dplyr)
library(trackr)
install.packages("trackr")
library(dplyr)
library(trackr)
iinstall.packages("history")
install.packages("history")
library(trackr)
library(histry)
library(histry)
library(histry)
install.packages("histry")
library(dplyr)
library(trackr)
library(dplyr)
library(trackr)
library(histry)
install.packages("histry")
library(histry)
update.packages(checkBuilt = TRUE)
Yes
library(histry)
install.packages("graph")
update.packages(checkBuilt = TRUE)
library(histry)
install.packages(c("beeswarm", "BH", "boot", "brio", "broom", "class", "cluster", "codetools", "colorspace", "corrplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "diffobj", "dplyr", "DT", "e1071", "ellipsis", "fansi", "farver", "fastmap", "forcats", "foreign", "gert", "ggiraph", "gh", "haven", "highr", "hms", "htmltools", "httpuv", "isoband", "kableExtra", "KernSmooth", "knitr", "labelled", "later", "lattice", "lme4", "lubridate", "maptools", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "nlme", "nnet", "openssl", "pbkrtest", "pillar", "plotly", "pROC", "promises", "ps", "quantreg", "R.cache", "rappdirs", "Rcpp", "RcppArmadillo", "reprex", "rio", "rlang", "rmarkdown", "rsconnect", "rstatix", "rvest", "sf", "shiny", "sp", "SparseM", "spatial", "statmod", "stringi", "styler", "survival", "systemfonts", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "units", "utf8", "vctrs", "viridisLite", "xfun", "zip"))
install.packages(c("beeswarm", "BH", "boot", "brio", "broom", "class", "cluster", "codetools", "colorspace", "corrplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "diffobj", "dplyr", "DT", "e1071", "ellipsis", "fansi", "farver", "fastmap", "forcats", "foreign", "gert", "ggiraph", "gh", "haven", "highr", "hms", "htmltools", "httpuv", "isoband", "kableExtra", "KernSmooth", "knitr", "labelled", "later", "lattice", "lme4", "lubridate", "maptools", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "nlme", "nnet", "openssl", "pbkrtest", "pillar", "plotly", "pROC", "promises", "ps", "quantreg", "R.cache", "rappdirs", "Rcpp", "RcppArmadillo", "reprex", "rio", "rlang", "rmarkdown", "rsconnect", "rstatix", "rvest", "sf", "shiny", "sp", "SparseM", "spatial", "statmod", "stringi", "styler", "survival", "systemfonts", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "units", "utf8", "vctrs", "viridisLite", "xfun", "zip"))
install.packages(c("beeswarm", "BH", "boot", "brio", "broom", "class", "cluster", "codetools", "colorspace", "corrplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "diffobj", "dplyr", "DT", "e1071", "ellipsis", "fansi", "farver", "fastmap", "forcats", "foreign", "gert", "ggiraph", "gh", "haven", "highr", "hms", "htmltools", "httpuv", "isoband", "kableExtra", "KernSmooth", "knitr", "labelled", "later", "lattice", "lme4", "lubridate", "maptools", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "nlme", "nnet", "openssl", "pbkrtest", "pillar", "plotly", "pROC", "promises", "ps", "quantreg", "R.cache", "rappdirs", "Rcpp", "RcppArmadillo", "reprex", "rio", "rlang", "rmarkdown", "rsconnect", "rstatix", "rvest", "sf", "shiny", "sp", "SparseM", "spatial", "statmod", "stringi", "styler", "survival", "systemfonts", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "units", "utf8", "vctrs", "viridisLite", "xfun", "zip"))
install.packages(c("beeswarm", "BH", "boot", "brio", "broom", "class", "cluster", "codetools", "colorspace", "corrplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "diffobj", "dplyr", "DT", "e1071", "ellipsis", "fansi", "farver", "fastmap", "forcats", "foreign", "gert", "ggiraph", "gh", "haven", "highr", "hms", "htmltools", "httpuv", "isoband", "kableExtra", "KernSmooth", "knitr", "labelled", "later", "lattice", "lme4", "lubridate", "maptools", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "nlme", "nnet", "openssl", "pbkrtest", "pillar", "plotly", "pROC", "promises", "ps", "quantreg", "R.cache", "rappdirs", "Rcpp", "RcppArmadillo", "reprex", "rio", "rlang", "rmarkdown", "rsconnect", "rstatix", "rvest", "sf", "shiny", "sp", "SparseM", "spatial", "statmod", "stringi", "styler", "survival", "systemfonts", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "units", "utf8", "vctrs", "viridisLite", "xfun", "zip"))
library(dplyr)
library(trackr)
library(dplyr)
library(histry)
install.packages("histry", dependencies = TRUE)
library(dplyr)
library(histry)
install.packages("pkgconfig")
install.packages("pkgconfig")
library(dplyr)
library(histry)
setwd("~/Desktop/Reconstructing_London")
library(dplyr)
library(histry)
source("https://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.13")
install.packages("BiocInstaller")
R.version.string
updateR()
library(installr)
updateR()
library(dplyr)
library(histry)
library(dplyr)
library(histry)
library(dplyr)
library(trackr)
library(dplyr)
library(trackr)
library(dplyr)
library(histry)
library(dplyr)
library(histry)
library(devtools)
library(usethis)
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'Admin user password')
updateR()
library(dplyr)
library(histry)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("graph")
library(dplyr)
library(histry)
library(histry,dependencies = TRUW)
library(histry,dependencies = TRUE)
library(graph)
RR.version.string
R.version.string
update.packages(ask = FALSE, checkBuilt = TRUE)
library(dplyr)
library(histry)
library(dplyr)
library(dplyr)
library(histry)
library(graph)
install.packages("graph")
install.packages("graph",dependencies = TRUE)
RR.version.string
R.version.string
install.packages("BiocInstaller")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("graph", version = "3.8")
BiocManager::install("graph", version = "3.13")
library(dplyr)
library(histry)
library(trackr)
library(S4Vectors)
ininstall.packages(S4Vectors)
install.packages(S4Vectors)
install.packages("S4Vectors")
library(dplyr)
library(xml2)
library(tei2r)
install.packages("tei2r")
devtools::install_github("michaelgavin/tei2r", build_vignettes = T)
library(devtools)
install.packages("devtools")
library(dplyr)
library(xml2)
library(tei2r)
install_github("michaelgavin/tei2r", build_vignettes = T)
devtools::install_github("michaelgavin/tei2r", build_vignettes = T)
library(dplyr)
library(xml2)
library(tei2r)
devtools::install_github("michaelgavin/tei2r", build_vignettes = T)
library(dplyr)
library(xml2)
library(tei2r)
install_github("michaelgavin/tei2r", build_vignettes = T)
devtools::install_github("michaelgavin/tei2r", build_vignettes = T)
library(rmarkdown)
library(dplyr)
library(xml2)
library(tei2r)
devtools::install_github("michaelgavin/tei2r", build_vignettes = T)
